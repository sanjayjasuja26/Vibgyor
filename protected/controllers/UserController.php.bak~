<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="620" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.2" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-IN; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.generator">AbiWord</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
</rdf>
<styles>
<s type="P" name="Normal" basedon="" followedby="Current Settings" props="font-family:Liberation Serif; margin-top:0pt; font-variant:normal; margin-left:0pt; text-indent:0in; widows:2; font-style:normal; font-weight:normal; text-decoration:none; color:000000; line-height:1.0; text-align:left; margin-bottom:0pt; text-position:normal; margin-right:0pt; bgcolor:transparent; font-size:12pt; font-stretch:normal"/>
</styles>
<pagesize pagetype="A4" orientation="portrait" width="210.000000" height="297.000000" units="mm" page-scale="1.000000"/>
<section xid="1">
<p style="Normal" xid="2" props="text-align:left; tabstops:13.86cm/L0; dom-dir:ltr">&lt;?php</p>
<p style="Normal" xid="3"><c></c></p>
<p style="Normal" xid="4">/**</p>
<p style="Normal" xid="5" props="text-align:left; dom-dir:ltr">*@copyright :Amusoftech Pvt. Ltd. &lt; www.amusoftech.com &gt;</p>
<p style="Normal" xid="6" props="text-align:left; dom-dir:ltr">*@author     : Ram mohamad Singh&lt; er.amudeep@gmail.com &gt;</p>
<p style="Normal" xid="7">*/</p>
<p style="Normal" xid="8" props="text-align:left; dom-dir:ltr">namespace app\controllers;</p>
<p style="Normal" xid="9"><c></c></p>
<p style="Normal" xid="10" props="text-align:left; dom-dir:ltr">use app\components\TActiveForm;</p>
<p style="Normal" xid="11" props="text-align:left; dom-dir:ltr">use app\components\TController;</p>
<p style="Normal" xid="12" props="text-align:left; dom-dir:ltr">use app\models\LoginForm;</p>
<p style="Normal" xid="13" props="text-align:left; dom-dir:ltr">use app\models\User;</p>
<p style="Normal" xid="14" props="text-align:left; dom-dir:ltr">use app\models\search\User as UserSearch;</p>
<p style="Normal" xid="15" props="text-align:left; dom-dir:ltr">use Yii;</p>
<p style="Normal" xid="16" props="text-align:left; dom-dir:ltr">use yii\web\HttpException;</p>
<p style="Normal" xid="17" props="text-align:left; dom-dir:ltr">use yii\web\NotFoundHttpException;</p>
<p style="Normal" xid="18" props="text-align:left; dom-dir:ltr">use yii\web\Response;</p>
<p style="Normal" xid="19" props="text-align:left; dom-dir:ltr">use app\components\filters\AccessRule;</p>
<p style="Normal" xid="20" props="text-align:left; dom-dir:ltr">use app\components\filters\AccessControl;</p>
<p style="Normal" xid="21"><c></c></p>
<p style="Normal" xid="22">/**</p>
<p style="Normal" xid="23" props="text-align:left; dom-dir:ltr"> * UserController implements the CRUD actions for User model.</p>
<p style="Normal" xid="24"> */</p>
<p style="Normal" xid="25" props="text-align:left; dom-dir:ltr">class UserController extends TController</p>
<p style="Normal" xid="26">{</p>
<p style="Normal" xid="27"><c></c></p>
<p style="Normal" xid="28" props="text-align:left; dom-dir:ltr">    public function behaviors()</p>
<p style="Normal" xid="29">    {</p>
<p style="Normal" xid="30" props="text-align:left; dom-dir:ltr">        return [</p>
<p style="Normal" xid="31" props="text-align:left; dom-dir:ltr">            'access' =&gt; [</p>
<p style="Normal" xid="32" props="text-align:left; dom-dir:ltr">                'class' =&gt; AccessControl::className(),</p>
<p style="Normal" xid="33" props="text-align:left; dom-dir:ltr">                'ruleConfig' =&gt; [</p>
<p style="Normal" xid="34" props="text-align:left; dom-dir:ltr">                    'class' =&gt; AccessRule::className()</p>
<p style="Normal" xid="35">                ],</p>
<p style="Normal" xid="36" props="text-align:left; dom-dir:ltr">                'rules' =&gt; [</p>
<p style="Normal" xid="37">                    [</p>
<p style="Normal" xid="38" props="text-align:left; dom-dir:ltr">                        'actions' =&gt; [</p>
<p style="Normal" xid="39" props="text-align:left; dom-dir:ltr">                            'confirm-email',</p>
<p style="Normal" xid="40" props="text-align:left; dom-dir:ltr">                            'add',</p>
<p style="Normal" xid="41" props="text-align:left; dom-dir:ltr">                            'view',</p>
<p style="Normal" xid="42" props="text-align:left; dom-dir:ltr">                            'update',</p>
<p style="Normal" xid="43" props="text-align:left; dom-dir:ltr">                            'logout',</p>
<p style="Normal" xid="44" props="text-align:left; dom-dir:ltr">                            'changepassword',</p>
<p style="Normal" xid="45" props="text-align:left; dom-dir:ltr">                            'profile-image',</p>
<p style="Normal" xid="46" props="text-align:left; dom-dir:ltr">                            'toggle',</p>
<p style="Normal" xid="47" props="text-align:left; dom-dir:ltr">                            'dashboard'</p>
<p style="Normal" xid="48">                        ],</p>
<p style="Normal" xid="49" props="text-align:left; dom-dir:ltr">                        'allow' =&gt; true,</p>
<p style="Normal" xid="50" props="text-align:left; dom-dir:ltr">                        'matchCallback' =&gt; function () {</p>
<p style="Normal" xid="51" props="text-align:left; dom-dir:ltr">                            return User::isUser();</p>
<p style="Normal" xid="52">                        }</p>
<p style="Normal" xid="53">                    ],</p>
<p style="Normal" xid="54">                    [</p>
<p style="Normal" xid="55" props="text-align:left; dom-dir:ltr">                        'actions' =&gt; [</p>
<p style="Normal" xid="56" props="text-align:left; dom-dir:ltr">                            'index',</p>
<p style="Normal" xid="57" props="text-align:left; dom-dir:ltr">                            'delete',</p>
<p style="Normal" xid="58" props="text-align:left; dom-dir:ltr">                            'add',</p>
<p style="Normal" xid="59" props="text-align:left; dom-dir:ltr">                            'view',</p>
<p style="Normal" xid="60" props="text-align:left; dom-dir:ltr">                            'update',</p>
<p style="Normal" xid="61" props="text-align:left; dom-dir:ltr">                            'delete',</p>
<p style="Normal" xid="62" props="text-align:left; dom-dir:ltr">                            'logout',</p>
<p style="Normal" xid="63" props="text-align:left; dom-dir:ltr">                            'changepassword',</p>
<p style="Normal" xid="64" props="text-align:left; dom-dir:ltr">                            'resetpassword',</p>
<p style="Normal" xid="65" props="text-align:left; dom-dir:ltr">                            'dashboard',</p>
<p style="Normal" xid="66" props="text-align:left; dom-dir:ltr">                            'profile-image',</p>
<p style="Normal" xid="67" props="text-align:left; dom-dir:ltr">                            'toggle',</p>
<p style="Normal" xid="68" props="text-align:left; dom-dir:ltr">                            'clear',</p>
<p style="Normal" xid="69" props="text-align:left; dom-dir:ltr">                            'recover',</p>
<p style="Normal" xid="70" props="text-align:left; dom-dir:ltr">                            'add-admin',</p>
<p style="Normal" xid="71" props="text-align:left; dom-dir:ltr">                            'mass'</p>
<p style="Normal" xid="72">                        ],</p>
<p style="Normal" xid="73" props="text-align:left; dom-dir:ltr">                        'allow' =&gt; true,</p>
<p style="Normal" xid="74" props="text-align:left; dom-dir:ltr">                        'matchCallback' =&gt; function () {</p>
<p style="Normal" xid="75" props="text-align:left; dom-dir:ltr">                            return User::isAdmin();</p>
<p style="Normal" xid="76">                        }</p>
<p style="Normal" xid="77">                    ],</p>
<p style="Normal" xid="78"><c></c></p>
<p style="Normal" xid="79">                    [</p>
<p style="Normal" xid="80" props="text-align:left; dom-dir:ltr">                        'actions' =&gt; [</p>
<p style="Normal" xid="81" props="text-align:left; dom-dir:ltr">                            'login',</p>
<p style="Normal" xid="82" props="text-align:left; dom-dir:ltr">                            'signup',</p>
<p style="Normal" xid="83" props="text-align:left; dom-dir:ltr">                            'resetpassword',</p>
<p style="Normal" xid="84" props="text-align:left; dom-dir:ltr">                            'recover',</p>
<p style="Normal" xid="85" props="text-align:left; dom-dir:ltr">                            'add-admin',</p>
<p style="Normal" xid="86" props="text-align:left; dom-dir:ltr">                            'confirm-email'</p>
<p style="Normal" xid="87">                        ],</p>
<p style="Normal" xid="88" props="text-align:left; dom-dir:ltr">                        'allow' =&gt; true,</p>
<p style="Normal" xid="89" props="text-align:left; dom-dir:ltr">                        'roles' =&gt; [</p>
<p style="Normal" xid="90">                            '?',</p>
<p style="Normal" xid="91">                            '*'</p>
<p style="Normal" xid="92">                        ]</p>
<p style="Normal" xid="93">                    ]</p>
<p style="Normal" xid="94">                ]</p>
<p style="Normal" xid="95">            ],</p>
<p style="Normal" xid="96" props="text-align:left; dom-dir:ltr">            'verbs' =&gt; [</p>
<p style="Normal" xid="97" props="text-align:left; dom-dir:ltr">                'class' =&gt; \yii\filters\VerbFilter::className(),</p>
<p style="Normal" xid="98" props="text-align:left; dom-dir:ltr">                'actions' =&gt; [</p>
<p style="Normal" xid="99" props="text-align:left; dom-dir:ltr">                    'delete' =&gt; [</p>
<p style="Normal" xid="100" props="text-align:left; dom-dir:ltr">                        'post'</p>
<p style="Normal" xid="101">                    ]</p>
<p style="Normal" xid="102">                ]</p>
<p style="Normal" xid="103">            ]</p>
<p style="Normal" xid="104">        ];</p>
<p style="Normal" xid="105">    }</p>
<p style="Normal" xid="106"><c></c></p>
<p style="Normal" xid="107">    /**</p>
<p style="Normal" xid="108" props="text-align:left; dom-dir:ltr">     * actionMass delete in mass as items are checked</p>
<p style="Normal" xid="109">     *</p>
<p style="Normal" xid="110" props="text-align:left; dom-dir:ltr">     * @param string $action</p>
<p style="Normal" xid="111" props="text-align:left; dom-dir:ltr">     * @return string</p>
<p style="Normal" xid="112">     */</p>
<p style="Normal" xid="113" props="text-align:left; dom-dir:ltr">    public function actionMass($action = 'delete')</p>
<p style="Normal" xid="114">    {   </p>
<p style="Normal" xid="115" props="text-align:left; dom-dir:ltr">        \Yii::$app-&gt;response-&gt;format = 'json';</p>
<p style="Normal" xid="116" props="text-align:left; dom-dir:ltr">        $response['status'] = 'NOK';</p>
<p style="Normal" xid="117" props="text-align:left; dom-dir:ltr">        $status = User::massDelete();</p>
<p style="Normal" xid="118" props="text-align:left; dom-dir:ltr">        if ($status == true) {</p>
<p style="Normal" xid="119" props="text-align:left; dom-dir:ltr">            $response['status'] = 'OK';</p>
<p style="Normal" xid="120">        }</p>
<p style="Normal" xid="121" props="text-align:left; dom-dir:ltr">        return $response;</p>
<p style="Normal" xid="122">    }</p>
<p style="Normal" xid="123"><c></c></p>
<p style="Normal" xid="124" props="text-align:left; dom-dir:ltr">    public function actionClear()</p>
<p style="Normal" xid="125">    {</p>
<p style="Normal" xid="126" props="text-align:left; dom-dir:ltr">        $runtime = Yii::getAlias('@runtime');</p>
<p style="Normal" xid="127" props="text-align:left; dom-dir:ltr">        $this-&gt;cleanRuntimeDir($runtime);</p>
<p style="Normal" xid="128" props="text-align:left; dom-dir:ltr">        $this-&gt;cleanAssetsDir();</p>
<p style="Normal" xid="129" props="text-align:left; dom-dir:ltr">        \Yii::$app-&gt;getSession()-&gt;setFlash('success', \Yii::t('app', "Cleared"));</p>
<p style="Normal" xid="130" props="text-align:left; dom-dir:ltr">        return $this-&gt;goBack();</p>
<p style="Normal" xid="131">    }</p>
<p style="Normal" xid="132"><c></c></p>
<p style="Normal" xid="133" props="text-align:left; dom-dir:ltr">    public function actionIndex()</p>
<p style="Normal" xid="134">    {</p>
<p style="Normal" xid="135" props="text-align:left; dom-dir:ltr">        $searchModel = new UserSearch();</p>
<p style="Normal" xid="136" props="text-align:left; dom-dir:ltr">        $dataProvider = $searchModel-&gt;search(Yii::$app-&gt;request-&gt;queryParams);</p>
<p style="Normal" xid="137" props="text-align:left; dom-dir:ltr">        $this-&gt;updateMenuItems();</p>
<p style="Normal" xid="138"><c></c></p>
<p style="Normal" xid="139" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('index', [</p>
<p style="Normal" xid="140" props="text-align:left; dom-dir:ltr">            'searchModel' =&gt; $searchModel,</p>
<p style="Normal" xid="141" props="text-align:left; dom-dir:ltr">            'dataProvider' =&gt; $dataProvider</p>
<p style="Normal" xid="142">        ]);</p>
<p style="Normal" xid="143">    }</p>
<p style="Normal" xid="144"><c></c></p>
<p style="Normal" xid="145" props="text-align:left; dom-dir:ltr">    public function actionView($id)</p>
<p style="Normal" xid="146">    {</p>
<p style="Normal" xid="147" props="text-align:left; dom-dir:ltr">        $model = $this-&gt;findModel($id);</p>
<p style="Normal" xid="148"><c></c></p>
<p style="Normal" xid="149" props="text-align:left; dom-dir:ltr">        $this-&gt;updateMenuItems($model);</p>
<p style="Normal" xid="150" props="text-align:left; dom-dir:ltr">        if ($model-&gt;load(Yii::$app-&gt;request-&gt;post()) &amp;&amp; $model-&gt;save()) {</p>
<p style="Normal" xid="151" props="text-align:left; dom-dir:ltr">            return $this-&gt;redirect($model-&gt;getUrl());</p>
<p style="Normal" xid="152">        }</p>
<p style="Normal" xid="153"><c></c></p>
<p style="Normal" xid="154" props="text-align:left; dom-dir:ltr">        if (Yii::$app-&gt;request-&gt;isAjax) {</p>
<p style="Normal" xid="155" props="text-align:left; dom-dir:ltr">            return $this-&gt;renderAjax('view', [</p>
<p style="Normal" xid="156" props="text-align:left; dom-dir:ltr">                'model' =&gt; $model</p>
<p style="Normal" xid="157">            ]);</p>
<p style="Normal" xid="158">        }</p>
<p style="Normal" xid="159" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('view', [</p>
<p style="Normal" xid="160" props="text-align:left; dom-dir:ltr">            'model' =&gt; $model</p>
<p style="Normal" xid="161">        ]);</p>
<p style="Normal" xid="162">    }</p>
<p style="Normal" xid="163"><c></c></p>
<p style="Normal" xid="164" props="text-align:left; dom-dir:ltr">    public function actionAddAdmin()</p>
<p style="Normal" xid="165">    {</p>
<p style="Normal" xid="166" props="text-align:left; dom-dir:ltr">        $this-&gt;layout = User::LAYOUT_GUEST_MAIN;</p>
<p style="Normal" xid="167" props="text-align:left; dom-dir:ltr">        $count = User::find()-&gt;count();</p>
<p style="Normal" xid="168" props="text-align:left; dom-dir:ltr">        if ($count != 0) {</p>
<p style="Normal" xid="169" props="text-align:left; dom-dir:ltr">            return $this-&gt;redirect([</p>
<p style="Normal" xid="170">                '/'</p>
<p style="Normal" xid="171">            ]);</p>
<p style="Normal" xid="172">        }</p>
<p style="Normal" xid="173" props="text-align:left; dom-dir:ltr">        $model = new User();</p>
<p style="Normal" xid="174" props="text-align:left; dom-dir:ltr">        $model-&gt;scenario = User::SCENARIO_ADD_ADMIN;</p>
<p style="Normal" xid="175" props="text-align:left; dom-dir:ltr">        if (Yii::$app-&gt;request-&gt;isAjax &amp;&amp; $model-&gt;load(Yii::$app-&gt;request-&gt;post())) {</p>
<p style="Normal" xid="176" props="text-align:left; dom-dir:ltr">            Yii::$app-&gt;response-&gt;format = Response::FORMAT_JSON;</p>
<p style="Normal" xid="177" props="text-align:left; dom-dir:ltr">            return TActiveForm::validate($model);</p>
<p style="Normal" xid="178">        }</p>
<p style="Normal" xid="179" props="text-align:left; dom-dir:ltr">        if ($model-&gt;load(Yii::$app-&gt;request-&gt;post())) {</p>
<p style="Normal" xid="180" props="text-align:left; dom-dir:ltr">            $model-&gt;role_id = User::ROLE_ADMIN;</p>
<p style="Normal" xid="181" props="text-align:left; dom-dir:ltr">            $model-&gt;state_id = User::STATE_ACTIVE;</p>
<p style="Normal" xid="182" props="text-align:left; dom-dir:ltr">            if ($model-&gt;validate()) {</p>
<p style="Normal" xid="183" props="text-align:left; dom-dir:ltr">                $model-&gt;setPassword($model-&gt;password);</p>
<p style="Normal" xid="184" props="text-align:left; dom-dir:ltr">                $model-&gt;generatePasswordResetToken();</p>
<p style="Normal" xid="185" props="text-align:left; dom-dir:ltr">                if ($model-&gt;save()) {</p>
<p style="Normal" xid="186" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;user-&gt;login($model);</p>
<p style="Normal" xid="187" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;getSession()-&gt;setFlash('success', \Yii::t('app', "Wellcome $model-&gt;full_name"));</p>
<p style="Normal" xid="188" props="text-align:left; dom-dir:ltr">                    return $this-&gt;goBack([</p>
<p style="Normal" xid="189" props="text-align:left; dom-dir:ltr">                        'dashboard/index'</p>
<p style="Normal" xid="190">                    ]);</p>
<p style="Normal" xid="191" props="text-align:left; dom-dir:ltr">                } else {</p>
<p style="Normal" xid="192" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;getSession()-&gt;setFlash('error', "Error !!" . $model-&gt;getErrorsString());</p>
<p style="Normal" xid="193">                }</p>
<p style="Normal" xid="194" props="text-align:left; dom-dir:ltr">            } else {</p>
<p style="Normal" xid="195" props="text-align:left; dom-dir:ltr">                \Yii::$app-&gt;getSession()-&gt;setFlash('error', "Error !!" . $model-&gt;getErrorsString());</p>
<p style="Normal" xid="196">            }</p>
<p style="Normal" xid="197">        }</p>
<p style="Normal" xid="198" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('add-admin', [</p>
<p style="Normal" xid="199" props="text-align:left; dom-dir:ltr">            'model' =&gt; $model</p>
<p style="Normal" xid="200">        ]);</p>
<p style="Normal" xid="201">    }</p>
<p style="Normal" xid="202"><c></c></p>
<p style="Normal" xid="203">    /**</p>
<p style="Normal" xid="204" props="text-align:left; dom-dir:ltr">     * Creates a new User model.</p>
<p style="Normal" xid="205" props="text-align:left; dom-dir:ltr">     * If creation is successful, the browser will be redirected to the 'view' page.</p>
<p style="Normal" xid="206">     *</p>
<p style="Normal" xid="207" props="text-align:left; dom-dir:ltr">     * @return mixed</p>
<p style="Normal" xid="208">     */</p>
<p style="Normal" xid="209" props="text-align:left; dom-dir:ltr">    public function actionAdd()</p>
<p style="Normal" xid="210">    {</p>
<p style="Normal" xid="211" props="text-align:left; dom-dir:ltr">        $this-&gt;layout = User::LAYOUT_MAIN;</p>
<p style="Normal" xid="212" props="text-align:left; dom-dir:ltr">        $post = Yii::$app-&gt;request-&gt;post();</p>
<p style="Normal" xid="213" props="text-align:left; dom-dir:ltr">        $model = new User();</p>
<p style="Normal" xid="214" props="text-align:left; dom-dir:ltr">        $model-&gt;role_id = User::ROLE_USER;</p>
<p style="Normal" xid="215" props="text-align:left; dom-dir:ltr">        $model-&gt;state_id = User::STATE_ACTIVE;</p>
<p style="Normal" xid="216" props="text-align:left; dom-dir:ltr">        $model-&gt;scenario = User::SCENARIO_SIGNUP;</p>
<p style="Normal" xid="217" props="text-align:left; dom-dir:ltr">        if (Yii::$app-&gt;request-&gt;isAjax &amp;&amp; $model-&gt;load(Yii::$app-&gt;request-&gt;post())) {</p>
<p style="Normal" xid="218" props="text-align:left; dom-dir:ltr">            Yii::$app-&gt;response-&gt;format = Response::FORMAT_JSON;</p>
<p style="Normal" xid="219" props="text-align:left; dom-dir:ltr">            return TActiveForm::validate($model);</p>
<p style="Normal" xid="220">        }</p>
<p style="Normal" xid="221" props="text-align:left; dom-dir:ltr">        if ($model-&gt;load($post)) {</p>
<p style="Normal" xid="222" props="text-align:left; dom-dir:ltr">            $model-&gt;saveUploadedFile($model, 'profile_file');</p>
<p style="Normal" xid="223" props="text-align:left; dom-dir:ltr">            if ($model-&gt;validate()) {</p>
<p style="Normal" xid="224" props="text-align:left; dom-dir:ltr">                $model-&gt;scenario = User::SCENARIO_ADD;</p>
<p style="Normal" xid="225" props="text-align:left; dom-dir:ltr">                $model-&gt;generatePasswordResetToken();</p>
<p style="Normal" xid="226" props="text-align:left; dom-dir:ltr">                $model-&gt;sendRegistrationMailtoUser($model);</p>
<p style="Normal" xid="227" props="text-align:left; dom-dir:ltr">                $model-&gt;state_id = User::STATE_ACTIVE;</p>
<p style="Normal" xid="228" props="text-align:left; dom-dir:ltr">                $model-&gt;setPassword($model-&gt;password);</p>
<p style="Normal" xid="229" props="text-align:left; dom-dir:ltr">                if ($model-&gt;save()) {</p>
<p style="Normal" xid="230" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;getSession()-&gt;setFlash('success', \Yii::t('app', 'User Added Successfully.'));</p>
<p style="Normal" xid="231" props="text-align:left; dom-dir:ltr">                    return $this-&gt;redirect([</p>
<p style="Normal" xid="232" props="text-align:left; dom-dir:ltr">                        'view',</p>
<p style="Normal" xid="233" props="text-align:left; dom-dir:ltr">                        'id' =&gt; $model-&gt;id</p>
<p style="Normal" xid="234">                    ]);</p>
<p style="Normal" xid="235" props="text-align:left; dom-dir:ltr">                } else {</p>
<p style="Normal" xid="236" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;getSession()-&gt;setFlash('error', "Error !!" . $model-&gt;getErrorsString());</p>
<p style="Normal" xid="237">                }</p>
<p style="Normal" xid="238" props="text-align:left; dom-dir:ltr">            } else {</p>
<p style="Normal" xid="239" props="text-align:left; dom-dir:ltr">                \Yii::$app-&gt;getSession()-&gt;setFlash('error', "Error !!" . $model-&gt;getErrorsString());</p>
<p style="Normal" xid="240">            }</p>
<p style="Normal" xid="241">        }</p>
<p style="Normal" xid="242" props="text-align:left; dom-dir:ltr">        $this-&gt;updateMenuItems($model);</p>
<p style="Normal" xid="243" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('add', [</p>
<p style="Normal" xid="244" props="text-align:left; dom-dir:ltr">            'model' =&gt; $model</p>
<p style="Normal" xid="245">        ]);</p>
<p style="Normal" xid="246">    }</p>
<p style="Normal" xid="247"><c></c></p>
<p style="Normal" xid="248" props="text-align:left; dom-dir:ltr">    public function actionRecover()</p>
<p style="Normal" xid="249">    {</p>
<p style="Normal" xid="250" props="text-align:left; dom-dir:ltr">        $this-&gt;layout = User::LAYOUT_GUEST_MAIN;</p>
<p style="Normal" xid="251" props="text-align:left; dom-dir:ltr">        $model = new User();</p>
<p style="Normal" xid="252" props="text-align:left; dom-dir:ltr">        $model-&gt;scenario = User::SCENARIO_TOKEN_REQUEST;</p>
<p style="Normal" xid="253" props="text-align:left; dom-dir:ltr">        if (isset($_POST['User'])) {</p>
<p style="Normal" xid="254" props="text-align:left; dom-dir:ltr">            $email = trim($_POST['User']['email']);</p>
<p style="Normal" xid="255" props="text-align:left; dom-dir:ltr">            if ($email != null) {</p>
<p style="Normal" xid="256"><c></c></p>
<p style="Normal" xid="257" props="text-align:left; dom-dir:ltr">                $user = User::findOne([</p>
<p style="Normal" xid="258" props="text-align:left; dom-dir:ltr">                    'email' =&gt; $email</p>
<p style="Normal" xid="259">                ]);</p>
<p style="Normal" xid="260" props="text-align:left; dom-dir:ltr">                if ($user) {</p>
<p style="Normal" xid="261" props="text-align:left; dom-dir:ltr">                    $user-&gt;generatePasswordResetToken();</p>
<p style="Normal" xid="262" props="text-align:left; dom-dir:ltr">                    if (! $user-&gt;save(false, [</p>
<p style="Normal" xid="263" props="text-align:left; dom-dir:ltr">                        'activation_key'</p>
<p style="Normal" xid="264">                    ])) {</p>
<p style="Normal" xid="265" props="text-align:left; dom-dir:ltr">                        throw new \yii\base\Exception(\Yii::t('app', "Cant Generate Authentication Key"));</p>
<p style="Normal" xid="266">                    }</p>
<p style="Normal" xid="267" props="text-align:left; dom-dir:ltr">                    $user-&gt;sendEmail();</p>
<p style="Normal" xid="268" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;session-&gt;setFlash('success', \Yii::t('app', 'Please check your email to reset your password.'));</p>
<p style="Normal" xid="269" props="text-align:left; dom-dir:ltr">                    return $this-&gt;redirect([</p>
<p style="Normal" xid="270" props="text-align:left; dom-dir:ltr">                        '/user/login'</p>
<p style="Normal" xid="271">                    ]);</p>
<p style="Normal" xid="272" props="text-align:left; dom-dir:ltr">                } else {</p>
<p style="Normal" xid="273" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;session-&gt;setFlash('error', \Yii::t('app', 'Email is not registered.'));</p>
<p style="Normal" xid="274">                }</p>
<p style="Normal" xid="275" props="text-align:left; dom-dir:ltr">            } else {</p>
<p style="Normal" xid="276" props="text-align:left; dom-dir:ltr">                $model-&gt;addError('error', \Yii::t('app', 'Email cannot be blank'));</p>
<p style="Normal" xid="277">            }</p>
<p style="Normal" xid="278">        }</p>
<p style="Normal" xid="279" props="text-align:left; dom-dir:ltr">        $this-&gt;updateMenuItems($model);</p>
<p style="Normal" xid="280" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('requestPasswordResetToken', [</p>
<p style="Normal" xid="281" props="text-align:left; dom-dir:ltr">            'model' =&gt; $model</p>
<p style="Normal" xid="282">        ]);</p>
<p style="Normal" xid="283">    }</p>
<p style="Normal" xid="284"><c></c></p>
<p style="Normal" xid="285" props="text-align:left; dom-dir:ltr">    public function actionResetpassword($token)</p>
<p style="Normal" xid="286">    {</p>
<p style="Normal" xid="287" props="text-align:left; dom-dir:ltr">        $this-&gt;layout = User::LAYOUT_GUEST_MAIN;</p>
<p style="Normal" xid="288" props="text-align:left; dom-dir:ltr">        $model = User::findByPasswordResetToken($token);</p>
<p style="Normal" xid="289" props="text-align:left; dom-dir:ltr">        if (! ($model)) {</p>
<p style="Normal" xid="290" props="text-align:left; dom-dir:ltr">            \Yii::$app-&gt;session-&gt;setFlash('error', \Yii::t('app', 'This URL is expired.'));</p>
<p style="Normal" xid="291">        }</p>
<p style="Normal" xid="292" props="text-align:left; dom-dir:ltr">        $newModel = new User([</p>
<p style="Normal" xid="293" props="text-align:left; dom-dir:ltr">            'scenario' =&gt; User::SCENARIO_RESETPASSWORD</p>
<p style="Normal" xid="294">        ]);</p>
<p style="Normal" xid="295" props="text-align:left; dom-dir:ltr">        if ($newModel-&gt;load(Yii::$app-&gt;request-&gt;post()) &amp;&amp; $newModel-&gt;validate() &amp;&amp; $model) {</p>
<p style="Normal" xid="296"><c></c></p>
<p style="Normal" xid="297" props="text-align:left; dom-dir:ltr">            $model-&gt;setPassword($newModel-&gt;password);</p>
<p style="Normal" xid="298" props="text-align:left; dom-dir:ltr">            $model-&gt;removePasswordResetToken();</p>
<p style="Normal" xid="299" props="text-align:left; dom-dir:ltr">            if ($model-&gt;save()) {</p>
<p style="Normal" xid="300" props="text-align:left; dom-dir:ltr">                \Yii::$app-&gt;session-&gt;setFlash('success', \Yii::t('app', 'New password is saved successfully.'));</p>
<p style="Normal" xid="301" props="text-align:left; dom-dir:ltr">            } else {</p>
<p style="Normal" xid="302" props="text-align:left; dom-dir:ltr">                \Yii::$app-&gt;session-&gt;setFlash('error', \Yii::t('app', 'Error while saving new password.'));</p>
<p style="Normal" xid="303">            }</p>
<p style="Normal" xid="304">        }</p>
<p style="Normal" xid="305" props="text-align:left; dom-dir:ltr">        $this-&gt;updateMenuItems($model);</p>
<p style="Normal" xid="306" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('resetpassword', [</p>
<p style="Normal" xid="307" props="text-align:left; dom-dir:ltr">            'model' =&gt; $newModel</p>
<p style="Normal" xid="308">        ]);</p>
<p style="Normal" xid="309">    }</p>
<p style="Normal" xid="310"><c></c></p>
<p style="Normal" xid="311">    /**</p>
<p style="Normal" xid="312" props="text-align:left; dom-dir:ltr">     * Updates an existing User model.</p>
<p style="Normal" xid="313" props="text-align:left; dom-dir:ltr">     * If update is successful, the browser will be redirected to the 'view' page.</p>
<p style="Normal" xid="314">     *</p>
<p style="Normal" xid="315" props="text-align:left; dom-dir:ltr">     * @param integer $id</p>
<p style="Normal" xid="316" props="text-align:left; dom-dir:ltr">     * @return mixed</p>
<p style="Normal" xid="317">     */</p>
<p style="Normal" xid="318" props="text-align:left; dom-dir:ltr">    public function actionUpdate($id)</p>
<p style="Normal" xid="319">    {</p>
<p style="Normal" xid="320" props="text-align:left; dom-dir:ltr">        $this-&gt;layout = User::LAYOUT_MAIN;</p>
<p style="Normal" xid="321" props="text-align:left; dom-dir:ltr">        $model = $this-&gt;findModel($id);</p>
<p style="Normal" xid="322" props="text-align:left; dom-dir:ltr">        $model-&gt;scenario = User::SCENARIO_UPDATE;</p>
<p style="Normal" xid="323" props="text-align:left; dom-dir:ltr">        $post = \yii::$app-&gt;request-&gt;post();</p>
<p style="Normal" xid="324" props="text-align:left; dom-dir:ltr">        $old_image = $model-&gt;profile_file;</p>
<p style="Normal" xid="325" props="text-align:left; dom-dir:ltr">        $password = $model-&gt;password;</p>
<p style="Normal" xid="326"><c></c></p>
<p style="Normal" xid="327" props="text-align:left; dom-dir:ltr">        if (Yii::$app-&gt;request-&gt;isAjax &amp;&amp; $model-&gt;load($post)) {</p>
<p style="Normal" xid="328" props="text-align:left; dom-dir:ltr">            Yii::$app-&gt;response-&gt;format = Response::FORMAT_JSON;</p>
<p style="Normal" xid="329" props="text-align:left; dom-dir:ltr">            return TActiveForm::validate($model);</p>
<p style="Normal" xid="330">        }</p>
<p style="Normal" xid="331"><c></c></p>
<p style="Normal" xid="332" props="text-align:left; dom-dir:ltr">        if ($model-&gt;load($post)) {</p>
<p style="Normal" xid="333" props="text-align:left; dom-dir:ltr">            if (! empty($post['User']['password'])) {</p>
<p style="Normal" xid="334" props="text-align:left; dom-dir:ltr">                $model-&gt;setPassword($post['User']['password']);</p>
<p style="Normal" xid="335" props="text-align:left; dom-dir:ltr">            } else {</p>
<p style="Normal" xid="336" props="text-align:left; dom-dir:ltr">                $model-&gt;password = $password;</p>
<p style="Normal" xid="337">            }</p>
<p style="Normal" xid="338" props="text-align:left; dom-dir:ltr">            $model-&gt;profile_file = $old_image;</p>
<p style="Normal" xid="339" props="text-align:left; dom-dir:ltr">            $model-&gt;saveUploadedFile($model, 'profile_file', $old_image);</p>
<p style="Normal" xid="340" props="text-align:left; dom-dir:ltr">            if ($model-&gt;save()) {</p>
<p style="Normal" xid="341" props="text-align:left; dom-dir:ltr">                \Yii::$app-&gt;session-&gt;setFlash('success', \Yii::t('app', 'User Updated successfully.'));</p>
<p style="Normal" xid="342" props="text-align:left; dom-dir:ltr">                return $this-&gt;redirect($model-&gt;getUrl());</p>
<p style="Normal" xid="343" props="text-align:left; dom-dir:ltr">            } else {</p>
<p style="Normal" xid="344" props="text-align:left; dom-dir:ltr">                \Yii::$app-&gt;getSession()-&gt;setFlash('error', "Error !!" . $model-&gt;getErrorsString());</p>
<p style="Normal" xid="345">            }</p>
<p style="Normal" xid="346">        }</p>
<p style="Normal" xid="347" props="text-align:left; dom-dir:ltr">        $model-&gt;password = '';</p>
<p style="Normal" xid="348" props="text-align:left; dom-dir:ltr">        $this-&gt;updateMenuItems($model);</p>
<p style="Normal" xid="349" props="text-align:left; dom-dir:ltr">        if (Yii::$app-&gt;request-&gt;isAjax) {</p>
<p style="Normal" xid="350" props="text-align:left; dom-dir:ltr">            return $this-&gt;renderAjax('update', [</p>
<p style="Normal" xid="351" props="text-align:left; dom-dir:ltr">                'model' =&gt; $model</p>
<p style="Normal" xid="352">            ]);</p>
<p style="Normal" xid="353">        }</p>
<p style="Normal" xid="354" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('update', [</p>
<p style="Normal" xid="355" props="text-align:left; dom-dir:ltr">            'model' =&gt; $model</p>
<p style="Normal" xid="356">        ]);</p>
<p style="Normal" xid="357">    }</p>
<p style="Normal" xid="358"><c></c></p>
<p style="Normal" xid="359">    /**</p>
<p style="Normal" xid="360" props="text-align:left; dom-dir:ltr">     * Deletes an existing User model.</p>
<p style="Normal" xid="361" props="text-align:left; dom-dir:ltr">     * If deletion is successful, the browser will be redirected to the 'index' page.</p>
<p style="Normal" xid="362">     *</p>
<p style="Normal" xid="363" props="text-align:left; dom-dir:ltr">     * @param integer $id</p>
<p style="Normal" xid="364" props="text-align:left; dom-dir:ltr">     * @return mixed</p>
<p style="Normal" xid="365">     */</p>
<p style="Normal" xid="366" props="text-align:left; dom-dir:ltr">    public function actionDelete($id)</p>
<p style="Normal" xid="367">    {</p>
<p style="Normal" xid="368" props="text-align:left; dom-dir:ltr">        $model = $this-&gt;findModel($id);</p>
<p style="Normal" xid="369" props="text-align:left; dom-dir:ltr">        $this-&gt;updateMenuItems($model);</p>
<p style="Normal" xid="370"><c></c></p>
<p style="Normal" xid="371" props="text-align:left; dom-dir:ltr">        if (\Yii::$app-&gt;user-&gt;id == $model-&gt;id || $model-&gt;role_id == User::ROLE_ADMIN) {</p>
<p style="Normal" xid="372" props="text-align:left; dom-dir:ltr">            \Yii::$app-&gt;session-&gt;setFlash('warrning', 'You are not allowed to perform this operation.');</p>
<p style="Normal" xid="373" props="text-align:left; dom-dir:ltr">            return $this-&gt;redirect(\Yii::$app-&gt;request-&gt;referrer);</p>
<p style="Normal" xid="374">        }</p>
<p style="Normal" xid="375" props="text-align:left; dom-dir:ltr">        $model-&gt;delete();</p>
<p style="Normal" xid="376" props="text-align:left; dom-dir:ltr">        if (\Yii::$app-&gt;request-&gt;isAjax) {</p>
<p style="Normal" xid="377" props="text-align:left; dom-dir:ltr">            return true;</p>
<p style="Normal" xid="378">        }</p>
<p style="Normal" xid="379" props="text-align:left; dom-dir:ltr">        \Yii::$app-&gt;session-&gt;setFlash('success', \Yii::t('app', 'User Deleted successfully.'));</p>
<p style="Normal" xid="380" props="text-align:left; dom-dir:ltr">        return $this-&gt;redirect([</p>
<p style="Normal" xid="381" props="text-align:left; dom-dir:ltr">            'index'</p>
<p style="Normal" xid="382">        ]);</p>
<p style="Normal" xid="383">    }</p>
<p style="Normal" xid="384"><c></c></p>
<p style="Normal" xid="385" props="text-align:left; dom-dir:ltr">    public function actionConfirmEmail($id)</p>
<p style="Normal" xid="386">    {</p>
<p style="Normal" xid="387" props="text-align:left; dom-dir:ltr">        $user = User::find()-&gt;where([</p>
<p style="Normal" xid="388" props="text-align:left; dom-dir:ltr">            'activation_key' =&gt; $id</p>
<p style="Normal" xid="389" props="text-align:left; dom-dir:ltr">        ])-&gt;one();</p>
<p style="Normal" xid="390" props="text-align:left; dom-dir:ltr">        if (! empty($user)) {</p>
<p style="Normal" xid="391" props="text-align:left; dom-dir:ltr">            $user-&gt;email_verified = User::EMAIL_VERIFIED;</p>
<p style="Normal" xid="392" props="text-align:left; dom-dir:ltr">            if ($user-&gt;save()) {</p>
<p style="Normal" xid="393" props="text-align:left; dom-dir:ltr">                if (Yii::$app-&gt;user-&gt;login($user, 3600 * 24 * 30)) {</p>
<p style="Normal" xid="394" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;getSession()-&gt;setFlash('success', 'Congratulations! your account is verified');</p>
<p style="Normal" xid="395" props="text-align:left; dom-dir:ltr">                    return $this-&gt;redirect([</p>
<p style="Normal" xid="396" props="text-align:left; dom-dir:ltr">                        '/dashboard'</p>
<p style="Normal" xid="397">                    ]);</p>
<p style="Normal" xid="398">                }</p>
<p style="Normal" xid="399">            }</p>
<p style="Normal" xid="400" props="text-align:left; dom-dir:ltr">        } else {</p>
<p style="Normal" xid="401" props="text-align:left; dom-dir:ltr">            \Yii::$app-&gt;getSession()-&gt;setFlash('error', 'Token is Expired Please Resend Again');</p>
<p style="Normal" xid="402" props="text-align:left; dom-dir:ltr">            return $this-&gt;redirect([</p>
<p style="Normal" xid="403" props="text-align:left; dom-dir:ltr">                'dashboard'</p>
<p style="Normal" xid="404">            ]);</p>
<p style="Normal" xid="405">        }</p>
<p style="Normal" xid="406">    }</p>
<p style="Normal" xid="407"><c></c></p>
<p style="Normal" xid="408" props="text-align:left; dom-dir:ltr">    public function actionSignup()</p>
<p style="Normal" xid="409">    {</p>
<p style="Normal" xid="410" props="text-align:left; dom-dir:ltr">        $this-&gt;layout = User::LAYOUT_GUEST_MAIN;</p>
<p style="Normal" xid="411" props="text-align:left; dom-dir:ltr">        $model = new User([</p>
<p style="Normal" xid="412" props="text-align:left; dom-dir:ltr">            'scenario' =&gt; User::SCENARIO_SIGNUP</p>
<p style="Normal" xid="413">        ]);</p>
<p style="Normal" xid="414" props="text-align:left; dom-dir:ltr">        if (Yii::$app-&gt;request-&gt;isAjax &amp;&amp; $model-&gt;load(Yii::$app-&gt;request-&gt;post())) {</p>
<p style="Normal" xid="415" props="text-align:left; dom-dir:ltr">            Yii::$app-&gt;response-&gt;format = Response::FORMAT_JSON;</p>
<p style="Normal" xid="416" props="text-align:left; dom-dir:ltr">            return TActiveForm::validate($model);</p>
<p style="Normal" xid="417">        }</p>
<p style="Normal" xid="418" props="text-align:left; dom-dir:ltr">        if ($model-&gt;load(Yii::$app-&gt;request-&gt;post())) {</p>
<p style="Normal" xid="419" props="text-align:left; dom-dir:ltr">            $model-&gt;state_id = User::STATE_ACTIVE;</p>
<p style="Normal" xid="420" props="text-align:left; dom-dir:ltr">            $model-&gt;role_id = User::ROLE_USER;</p>
<p style="Normal" xid="421" props="text-align:left; dom-dir:ltr">            $model-&gt;email_verified = User::EMAIL_NOT_VERIFIED;</p>
<p style="Normal" xid="422" props="text-align:left; dom-dir:ltr">            if ($model-&gt;validate()) {</p>
<p style="Normal" xid="423" props="text-align:left; dom-dir:ltr">                $model-&gt;scenario = User::SCENARIO_ADD;</p>
<p style="Normal" xid="424" props="text-align:left; dom-dir:ltr">                $model-&gt;setPassword($model-&gt;password);</p>
<p style="Normal" xid="425" props="text-align:left; dom-dir:ltr">                $model-&gt;generatePasswordResetToken();</p>
<p style="Normal" xid="426" props="text-align:left; dom-dir:ltr">                if ($model-&gt;save()) {</p>
<p style="Normal" xid="427" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;getSession()-&gt;setFlash('success', "Signup Successfull.");</p>
<p style="Normal" xid="428" props="text-align:left; dom-dir:ltr">                    return $this-&gt;redirect([</p>
<p style="Normal" xid="429" props="text-align:left; dom-dir:ltr">                        '/site/index'</p>
<p style="Normal" xid="430">                    ]);</p>
<p style="Normal" xid="431" props="text-align:left; dom-dir:ltr">                } else {</p>
<p style="Normal" xid="432" props="text-align:left; dom-dir:ltr">                    \Yii::$app-&gt;getSession()-&gt;setFlash('error', "Error !!" . $model-&gt;getErrorsString());</p>
<p style="Normal" xid="433">                }</p>
<p style="Normal" xid="434" props="text-align:left; dom-dir:ltr">            } else {</p>
<p style="Normal" xid="435" props="text-align:left; dom-dir:ltr">                \Yii::$app-&gt;getSession()-&gt;setFlash('error', "Error !!" . $model-&gt;getErrorsString());</p>
<p style="Normal" xid="436">            }</p>
<p style="Normal" xid="437">        }</p>
<p style="Normal" xid="438" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('signup', [</p>
<p style="Normal" xid="439" props="text-align:left; dom-dir:ltr">            'model' =&gt; $model</p>
<p style="Normal" xid="440">        ]);</p>
<p style="Normal" xid="441">    }</p>
<p style="Normal" xid="442"><c></c></p>
<p style="Normal" xid="443" props="text-align:left; dom-dir:ltr">    public function actionLogin()</p>
<p style="Normal" xid="444">    {</p>
<p style="Normal" xid="445" props="text-align:left; dom-dir:ltr">        $this-&gt;layout = User::LAYOUT_GUEST_MAIN;</p>
<p style="Normal" xid="446" props="text-align:left; dom-dir:ltr">        if (! \Yii::$app-&gt;user-&gt;isGuest) {</p>
<p style="Normal" xid="447" props="text-align:left; dom-dir:ltr">            return $this-&gt;goHome();</p>
<p style="Normal" xid="448">        }</p>
<p style="Normal" xid="449" props="text-align:left; dom-dir:ltr">        $model = new LoginForm();</p>
<p style="Normal" xid="450" props="text-align:left; dom-dir:ltr">        if ($model-&gt;load(Yii::$app-&gt;request-&gt;post()) &amp;&amp; $model-&gt;login()) {</p>
<p style="Normal" xid="451" props="text-align:left; dom-dir:ltr">            return $this-&gt;goBack([</p>
<p style="Normal" xid="452" props="text-align:left; dom-dir:ltr">                'dashboard/index'</p>
<p style="Normal" xid="453">            ]);</p>
<p style="Normal" xid="454">        }</p>
<p style="Normal" xid="455" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('login', [</p>
<p style="Normal" xid="456" props="text-align:left; dom-dir:ltr">            'model' =&gt; $model</p>
<p style="Normal" xid="457">        ]);</p>
<p style="Normal" xid="458">    }</p>
<p style="Normal" xid="459"><c></c></p>
<p style="Normal" xid="460" props="text-align:left; dom-dir:ltr">    public function actionLogout()</p>
<p style="Normal" xid="461">    {</p>
<p style="Normal" xid="462" props="text-align:left; dom-dir:ltr">        Yii::$app-&gt;user-&gt;logout();</p>
<p style="Normal" xid="463" props="text-align:left; dom-dir:ltr">        return $this-&gt;goHome();</p>
<p style="Normal" xid="464">    }</p>
<p style="Normal" xid="465"><c></c></p>
<p style="Normal" xid="466" props="text-align:left; dom-dir:ltr">    public function actionChangepassword($id)</p>
<p style="Normal" xid="467">    {</p>
<p style="Normal" xid="468" props="text-align:left; dom-dir:ltr">        $this-&gt;layout = User::LAYOUT_MAIN;</p>
<p style="Normal" xid="469" props="text-align:left; dom-dir:ltr">        $model = $this-&gt;findModel($id);</p>
<p style="Normal" xid="470" props="text-align:left; dom-dir:ltr">        if (! ($model-&gt;isAllowed()))</p>
<p style="Normal" xid="471" props="text-align:left; dom-dir:ltr">            throw new \yii\web\HttpException(403, Yii::t('app', 'You are not allowed to access this page.'));</p>
<p style="Normal" xid="472"><c></c></p>
<p style="Normal" xid="473" props="text-align:left; dom-dir:ltr">        $newModel = new User([</p>
<p style="Normal" xid="474" props="text-align:left; dom-dir:ltr">            'scenario' =&gt; User::SCENARIO_CHANGEPASSWORD</p>
<p style="Normal" xid="475">        ]);</p>
<p style="Normal" xid="476" props="text-align:left; dom-dir:ltr">        if (Yii::$app-&gt;request-&gt;isAjax &amp;&amp; $newModel-&gt;load(Yii::$app-&gt;request-&gt;post())) {</p>
<p style="Normal" xid="477" props="text-align:left; dom-dir:ltr">            Yii::$app-&gt;response-&gt;format = Response::FORMAT_JSON;</p>
<p style="Normal" xid="478" props="text-align:left; dom-dir:ltr">            return TActiveForm::validate($newModel);</p>
<p style="Normal" xid="479">        }</p>
<p style="Normal" xid="480" props="text-align:left; dom-dir:ltr">        if ($newModel-&gt;load(Yii::$app-&gt;request-&gt;post()) &amp;&amp; $newModel-&gt;validate()) {</p>
<p style="Normal" xid="481" props="text-align:left; dom-dir:ltr">            $model-&gt;setPassword($newModel-&gt;newPassword);</p>
<p style="Normal" xid="482" props="text-align:left; dom-dir:ltr">            if ($model-&gt;save(false, [</p>
<p style="Normal" xid="483" props="text-align:left; dom-dir:ltr">                'password'</p>
<p style="Normal" xid="484">            ])) {</p>
<p style="Normal" xid="485" props="text-align:left; dom-dir:ltr">                Yii::$app-&gt;getSession()-&gt;setFlash('success', Yii::t('app', 'Password Changed successfully'));</p>
<p style="Normal" xid="486" props="text-align:left; dom-dir:ltr">                return $this-&gt;redirect([</p>
<p style="Normal" xid="487" props="text-align:left; dom-dir:ltr">                    'dashboard/index'</p>
<p style="Normal" xid="488">                ]);</p>
<p style="Normal" xid="489" props="text-align:left; dom-dir:ltr">            } else {</p>
<p style="Normal" xid="490" props="text-align:left; dom-dir:ltr">                \Yii::$app-&gt;getSession()-&gt;setFlash('error', "Error !!" . $model-&gt;getErrorsString());</p>
<p style="Normal" xid="491">            }</p>
<p style="Normal" xid="492">        }</p>
<p style="Normal" xid="493" props="text-align:left; dom-dir:ltr">        $this-&gt;updateMenuItems($model);</p>
<p style="Normal" xid="494" props="text-align:left; dom-dir:ltr">        return $this-&gt;render('changepassword', [</p>
<p style="Normal" xid="495" props="text-align:left; dom-dir:ltr">            'model' =&gt; $newModel</p>
<p style="Normal" xid="496">        ]);</p>
<p style="Normal" xid="497">    }</p>
<p style="Normal" xid="498"><c></c></p>
<p style="Normal" xid="499" props="text-align:left; dom-dir:ltr">    public function actionDashboard()</p>
<p style="Normal" xid="500">    {</p>
<p style="Normal" xid="501" props="text-align:left; dom-dir:ltr">        return $this-&gt;redirect([</p>
<p style="Normal" xid="502" props="text-align:left; dom-dir:ltr">            'dashboard/index'</p>
<p style="Normal" xid="503">        ]);</p>
<p style="Normal" xid="504">    }</p>
<p style="Normal" xid="505"><c></c></p>
<p style="Normal" xid="506" props="text-align:left; dom-dir:ltr">    protected function findModel($id)</p>
<p style="Normal" xid="507">    {</p>
<p style="Normal" xid="508" props="text-align:left; dom-dir:ltr">        if (($model = User::findOne($id)) !== null) {</p>
<p style="Normal" xid="509"><c></c></p>
<p style="Normal" xid="510" props="text-align:left; dom-dir:ltr">            if (! ($model-&gt;isAllowed()))</p>
<p style="Normal" xid="511" props="text-align:left; dom-dir:ltr">                throw new HttpException(403, Yii::t('app', 'You are not allowed to access this page.'));</p>
<p style="Normal" xid="512"><c></c></p>
<p style="Normal" xid="513" props="text-align:left; dom-dir:ltr">            return $model;</p>
<p style="Normal" xid="514" props="text-align:left; dom-dir:ltr">        } else {</p>
<p style="Normal" xid="515" props="text-align:left; dom-dir:ltr">            throw new NotFoundHttpException('The requested page does not exist.');</p>
<p style="Normal" xid="516">        }</p>
<p style="Normal" xid="517">    }</p>
<p style="Normal" xid="518"><c></c></p>
<p style="Normal" xid="519" props="text-align:left; dom-dir:ltr">    protected function updateMenuItems($model = null)</p>
<p style="Normal" xid="520">    {</p>
<p style="Normal" xid="521" props="text-align:left; dom-dir:ltr">        switch (\Yii::$app-&gt;controller-&gt;action-&gt;id) {</p>
<p style="Normal" xid="522"><c></c></p>
<p style="Normal" xid="523" props="text-align:left; dom-dir:ltr">            case 'add':</p>
<p style="Normal" xid="524">                {</p>
<p style="Normal" xid="525" props="text-align:left; dom-dir:ltr">                    $this-&gt;menu['add'] = [</p>
<p style="Normal" xid="526" props="text-align:left; dom-dir:ltr">                        'label' =&gt; '&lt;span class="glyphicon glyphicon-list"&gt;&lt;/span&gt;',</p>
<p style="Normal" xid="527" props="text-align:left; dom-dir:ltr">                        'title' =&gt; Yii::t('app', 'Manage'),</p>
<p style="Normal" xid="528" props="text-align:left; dom-dir:ltr">                        'url' =&gt; [</p>
<p style="Normal" xid="529" props="text-align:left; dom-dir:ltr">                            'index'</p>
<p style="Normal" xid="530">                        ],</p>
<p style="Normal" xid="531" props="text-align:left; dom-dir:ltr">                        'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="532">                    ];</p>
<p style="Normal" xid="533">                }</p>
<p style="Normal" xid="534" props="text-align:left; dom-dir:ltr">                break;</p>
<p style="Normal" xid="535" props="text-align:left; dom-dir:ltr">            case 'index':</p>
<p style="Normal" xid="536">                {</p>
<p style="Normal" xid="537" props="text-align:left; dom-dir:ltr">                    $this-&gt;menu['add'] = [</p>
<p style="Normal" xid="538" props="text-align:left; dom-dir:ltr">                        'label' =&gt; '&lt;span class="glyphicon glyphicon-plus"&gt;&lt;/span&gt;',</p>
<p style="Normal" xid="539" props="text-align:left; dom-dir:ltr">                        'title' =&gt; Yii::t('app', 'Add'),</p>
<p style="Normal" xid="540" props="text-align:left; dom-dir:ltr">                        'url' =&gt; [</p>
<p style="Normal" xid="541" props="text-align:left; dom-dir:ltr">                            'add'</p>
<p style="Normal" xid="542">                        ],</p>
<p style="Normal" xid="543" props="text-align:left; dom-dir:ltr">                        'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="544">                    ];</p>
<p style="Normal" xid="545">                }</p>
<p style="Normal" xid="546"><c></c></p>
<p style="Normal" xid="547" props="text-align:left; dom-dir:ltr">                break;</p>
<p style="Normal" xid="548" props="text-align:left; dom-dir:ltr">            case 'update':</p>
<p style="Normal" xid="549">                {</p>
<p style="Normal" xid="550" props="text-align:left; dom-dir:ltr">                    $this-&gt;menu['add'] = [</p>
<p style="Normal" xid="551" props="text-align:left; dom-dir:ltr">                        'label' =&gt; '&lt;span class="glyphicon glyphicon-plus"&gt;&lt;/span&gt;',</p>
<p style="Normal" xid="552" props="text-align:left; dom-dir:ltr">                        'title' =&gt; Yii::t('app', 'add'),</p>
<p style="Normal" xid="553" props="text-align:left; dom-dir:ltr">                        'url' =&gt; [</p>
<p style="Normal" xid="554" props="text-align:left; dom-dir:ltr">                            'add'</p>
<p style="Normal" xid="555">                        ],</p>
<p style="Normal" xid="556" props="text-align:left; dom-dir:ltr">                        'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="557">                    ];</p>
<p style="Normal" xid="558">                }</p>
<p style="Normal" xid="559" props="text-align:left; dom-dir:ltr">                break;</p>
<p style="Normal" xid="560" props="text-align:left; dom-dir:ltr">            case 'view':</p>
<p style="Normal" xid="561">                {</p>
<p style="Normal" xid="562" props="text-align:left; dom-dir:ltr">                    if ($model != null &amp;&amp; ($model-&gt;role_id != User::ROLE_ADMIN) &amp;&amp; \Yii::$app-&gt;hasModule('shadow'))</p>
<p style="Normal" xid="563" props="text-align:left; dom-dir:ltr">                        $this-&gt;menu['shadow'] = [</p>
<p style="Normal" xid="564" props="text-align:left; dom-dir:ltr">                            'label' =&gt; '&lt;span class="glyphicon glyphicon-refresh "&gt;Shadow&lt;/span&gt;',</p>
<p style="Normal" xid="565" props="text-align:left; dom-dir:ltr">                            'title' =&gt; Yii::t('app', 'Login as ' . $model),</p>
<p style="Normal" xid="566" props="text-align:left; dom-dir:ltr">                            'url' =&gt; [</p>
<p style="Normal" xid="567" props="text-align:left; dom-dir:ltr">                                '/shadow/session/login',</p>
<p style="Normal" xid="568" props="text-align:left; dom-dir:ltr">                                'id' =&gt; $model-&gt;id</p>
<p style="Normal" xid="569">                            ],</p>
<p style="Normal" xid="570"><c></c></p>
<p style="Normal" xid="571" props="text-align:left; dom-dir:ltr">                            'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="572">                        ];</p>
<p style="Normal" xid="573" props="text-align:left; dom-dir:ltr">                    $this-&gt;menu['add'] = [</p>
<p style="Normal" xid="574" props="text-align:left; dom-dir:ltr">                        'label' =&gt; '&lt;span class="glyphicon glyphicon-plus"&gt;&lt;/span&gt;',</p>
<p style="Normal" xid="575" props="text-align:left; dom-dir:ltr">                        'title' =&gt; Yii::t('app', 'Add'),</p>
<p style="Normal" xid="576" props="text-align:left; dom-dir:ltr">                        'url' =&gt; [</p>
<p style="Normal" xid="577" props="text-align:left; dom-dir:ltr">                            'add'</p>
<p style="Normal" xid="578">                        ],</p>
<p style="Normal" xid="579" props="text-align:left; dom-dir:ltr">                        'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="580">                    ];</p>
<p style="Normal" xid="581" props="text-align:left; dom-dir:ltr">                    if ($model != null)</p>
<p style="Normal" xid="582" props="text-align:left; dom-dir:ltr">                        $this-&gt;menu['changepassword'] = [</p>
<p style="Normal" xid="583" props="text-align:left; dom-dir:ltr">                            'label' =&gt; '&lt;span class="glyphicon glyphicon-paste"&gt;&lt;/span&gt;',</p>
<p style="Normal" xid="584" props="text-align:left; dom-dir:ltr">                            'title' =&gt; Yii::t('app', 'changepassword'),</p>
<p style="Normal" xid="585" props="text-align:left; dom-dir:ltr">                            'url' =&gt; $model-&gt;getUrl('changepassword'),</p>
<p style="Normal" xid="586"><c></c></p>
<p style="Normal" xid="587" props="text-align:left; dom-dir:ltr">                            'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="588">                        ];</p>
<p style="Normal" xid="589" props="text-align:left; dom-dir:ltr">                    if ($model != null)</p>
<p style="Normal" xid="590" props="text-align:left; dom-dir:ltr">                        $this-&gt;menu['update'] = [</p>
<p style="Normal" xid="591" props="text-align:left; dom-dir:ltr">                            'label' =&gt; '&lt;span class="glyphicon glyphicon-pencil"&gt;&lt;/span&gt;',</p>
<p style="Normal" xid="592" props="text-align:left; dom-dir:ltr">                            'title' =&gt; Yii::t('app', 'Update'),</p>
<p style="Normal" xid="593" props="text-align:left; dom-dir:ltr">                            'url' =&gt; $model-&gt;getUrl('update'),</p>
<p style="Normal" xid="594"><c></c></p>
<p style="Normal" xid="595" props="text-align:left; dom-dir:ltr">                            'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="596">                        ];</p>
<p style="Normal" xid="597" props="text-align:left; dom-dir:ltr">                    $this-&gt;menu['manage'] = [</p>
<p style="Normal" xid="598" props="text-align:left; dom-dir:ltr">                        'label' =&gt; '&lt;span class="glyphicon glyphicon-list"&gt;&lt;/span&gt;',</p>
<p style="Normal" xid="599" props="text-align:left; dom-dir:ltr">                        'title' =&gt; Yii::t('app', 'Manage'),</p>
<p style="Normal" xid="600" props="text-align:left; dom-dir:ltr">                        'url' =&gt; [</p>
<p style="Normal" xid="601" props="text-align:left; dom-dir:ltr">                            'index'</p>
<p style="Normal" xid="602">                        ],</p>
<p style="Normal" xid="603" props="text-align:left; dom-dir:ltr">                        'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="604">                    ];</p>
<p style="Normal" xid="605" props="text-align:left; dom-dir:ltr">                    if ($model != null)</p>
<p style="Normal" xid="606" props="text-align:left; dom-dir:ltr">                        $this-&gt;menu['delete'] = [</p>
<p style="Normal" xid="607" props="text-align:left; dom-dir:ltr">                            'label' =&gt; '&lt;span class="glyphicon glyphicon-trash"&gt;&lt;/span&gt;',</p>
<p style="Normal" xid="608" props="text-align:left; dom-dir:ltr">                            'title' =&gt; Yii::t('app', 'Delete'),</p>
<p style="Normal" xid="609" props="text-align:left; dom-dir:ltr">                            'url' =&gt; $model-&gt;getUrl('delete'),</p>
<p style="Normal" xid="610" props="text-align:left; dom-dir:ltr">                            'htmlOptions' =&gt; [</p>
<p style="Normal" xid="611" props="text-align:left; dom-dir:ltr">                                'data-method' =&gt; 'post'</p>
<p style="Normal" xid="612">                            ],</p>
<p style="Normal" xid="613" props="text-align:left; dom-dir:ltr">                            'visible' =&gt; User::isAdmin()</p>
<p style="Normal" xid="614">                        ];</p>
<p style="Normal" xid="615">                }</p>
<p style="Normal" xid="616" props="text-align:left; dom-dir:ltr">                break;</p>
<p style="Normal" xid="617">        }</p>
<p style="Normal" xid="618">    }</p>
<p style="Normal" xid="619">}</p>
<p style="Normal" xid="620"></p>
</section>
</abiword>
